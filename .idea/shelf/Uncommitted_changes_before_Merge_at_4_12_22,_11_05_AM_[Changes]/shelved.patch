Index: forum/templates/viewpost.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'layout.html' %}\n{% block body %}\n{{ path|safe}}\n\n<div class=\"actualpost\">\n\t<div class=\"actualposttitle\">\n\t\t<a href=\"/viewpost?post={{ post.id }}\">{{post.title}}</a>\n\t\t<div class=\"postposter\" {% if post.user.admin %} style=\"color: red;\" {% endif %}>\n\t\t\t{{ post.user.username }}\n\n\t\t</div>\n\t\t<div class=\"posttime\">\n\t\t\t{{ post.get_time_string() }}\n\t\t</div>\n\t</div>\n\t<div class=\"postcontent\">\n\t\t{{post.content}}\n\t</div>\n\n</div>\n<div class=\"addcomment\" id=\"addcomment\">\n\t<form action=\"/action_comment?post={{ post.id }}\" method=\"POST\">\n\t\t<textarea class=\"inputbox varwidth\" rows=\"6\" name=\"content\"></textarea><br>\n\t\t<input class=\"inputbox\" style=\"margin-bottom: 1%;\" type=\"submit\" value=\"Comment\">\n\t</form>\n</div>\n<div style=\"text-align: center;\">\n\n\t\n\n\t{% if current_user.is_authenticated %}\n\t<input type=\"button\" id=\"displayaddcomment\" onclick=\"toggle()\" value=\"Add a comment\">\n\n\t{% else %}\n\t<a href=\"/loginform\">Login or register to make a comment</a>\n\t{% endif %}\n</div>\n{%if comments%}\n<div class=\"comments\">\n{% for comment in comments %}\n\t\n\t<div class=\"comment\">\n\t\t<div class=\"commentuser\">\n\t\t\t(<span  {% if comment.user.admin %} style=\"color: red;\" {% endif %}>{{ comment.user.username }}</span>) - \n\t\t</div>\n\t\t<div class=\"commentcontent\">\n\t\t\t{{ comment.content }}\n\t\t</div>\n\t\t\n\t\t<div class=\"commenttime\">\n\t\t\t{{ comment.get_time_string() }}\n\t\t</div>\n\t</div>\n\t<br>\n\t\n{% endfor %}\n</div>\n{% endif %}\n<script type=\"text/javascript\">\nfunction toggle(){\n\tvar div = document.getElementById(\"addcomment\");\n\tvar button = document.getElementById(\"displayaddcomment\")\n\tif(div.style.display == \"none\" || div.style.display.trim() == \"\"){\n\t\tdiv.style.display = \"inline\";\n\t\tbutton.value=\"Hide\";\n\t}else{\n\t\tdiv.style.display = \"none\";\n\t\tbutton.value=\"Add a comment\"\n\t}\n\t\n}\n</script>\n\n\n{% endblock %}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/forum/templates/viewpost.html b/forum/templates/viewpost.html
--- a/forum/templates/viewpost.html	(revision 2bfa11f5f487a5f92d669e582749722caceb4d9a)
+++ b/forum/templates/viewpost.html	(date 1649775711778)
@@ -1,3 +1,5 @@
+
+
 {% extends 'layout.html' %}
 {% block body %}
 {{ path|safe}}
@@ -22,12 +24,13 @@
 	<form action="/action_comment?post={{ post.id }}" method="POST">
 		<textarea class="inputbox varwidth" rows="6" name="content"></textarea><br>
 		<input class="inputbox" style="margin-bottom: 1%;" type="submit" value="Comment">
+		<input class="inputbox" style="margin-bottom: 1%;" type="submit" value="Like">
+		<input class="inputbox" style="margin-bottom: 1%;" type="submit" value="Delete">
+
+
 	</form>
 </div>
 <div style="text-align: center;">
-
-	
-
 	{% if current_user.is_authenticated %}
 	<input type="button" id="displayaddcomment" onclick="toggle()" value="Add a comment">
 
@@ -38,21 +41,21 @@
 {%if comments%}
 <div class="comments">
 {% for comment in comments %}
-	
+
 	<div class="comment">
 		<div class="commentuser">
-			(<span  {% if comment.user.admin %} style="color: red;" {% endif %}>{{ comment.user.username }}</span>) - 
+			(<span  {% if comment.user.admin %} style="color: red;" {% endif %}>{{ comment.user.username }}</span>) -
 		</div>
 		<div class="commentcontent">
 			{{ comment.content }}
 		</div>
-		
+
 		<div class="commenttime">
 			{{ comment.get_time_string() }}
 		</div>
 	</div>
 	<br>
-	
+
 {% endfor %}
 </div>
 {% endif %}
@@ -67,7 +70,7 @@
 		div.style.display = "none";
 		button.value="Add a comment"
 	}
-	
+
 }
 </script>
 
@@ -75,3 +78,4 @@
 {% endblock %}
 
 
+
Index: forum/templates/header.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><a href=\"/\" id=\"nolinks\"><b>{{ config.SITE_NAME }}</b></a>{% if config.SITE_DESCRIPTION %} - {% endif %} <i>{{ config.SITE_DESCRIPTION }}</i>\n<div class=\"login\">\n\t{% if current_user.is_authenticated %}\n\t<b {% if current_user.admin %} style=\"color: red;\" {% endif %}>{{ current_user.username }}</b><a class=\"logoutlink\" href=\"/action_logout\">(logout)</a>\n\t{% else %}\n\t<a href=\"/loginform\">Click here to login or register!</a>\n\t{% endif %}\n</div>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/forum/templates/header.html b/forum/templates/header.html
--- a/forum/templates/header.html	(revision 2bfa11f5f487a5f92d669e582749722caceb4d9a)
+++ b/forum/templates/header.html	(date 1649775711782)
@@ -1,3 +1,4 @@
+
 <a href="/" id="nolinks"><b>{{ config.SITE_NAME }}</b></a>{% if config.SITE_DESCRIPTION %} - {% endif %} <i>{{ config.SITE_DESCRIPTION }}</i>
 <div class="login">
 	{% if current_user.is_authenticated %}
@@ -5,4 +6,5 @@
 	{% else %}
 	<a href="/loginform">Click here to login or register!</a>
 	{% endif %}
-</div>
\ No newline at end of file
+</div>
+
Index: forum/app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask\n\napp = Flask(__name__)\napp.config.update(\n    TESTING=True,\n    SECRET_KEY=b'kristofer',\n\tSITE_NAME = \"Schooner\",\n\tSITE_DESCRIPTION = \"a schooner forum\",\n\tSQLALCHEMY_DATABASE_URI='sqlite:////tmp/database.db'\n)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/forum/app.py b/forum/app.py
--- a/forum/app.py	(revision 2bfa11f5f487a5f92d669e582749722caceb4d9a)
+++ b/forum/app.py	(date 1649775711787)
@@ -4,7 +4,8 @@
 app.config.update(
     TESTING=True,
     SECRET_KEY=b'kristofer',
-	SITE_NAME = "Schooner",
-	SITE_DESCRIPTION = "a schooner forum",
-	SQLALCHEMY_DATABASE_URI='sqlite:////tmp/database.db'
+    SITE_NAME="Schooner",
+    SITE_DESCRIPTION="a schooner forum",
+    IMAGES_PATH=['images'],
+    SQLALCHEMY_DATABASE_URI='sqlite:////tmp/database.db'
 )
Index: forum/forum.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import *\n#from flask.ext.login import LoginManager, login_required, current_user, logout_user, login_user\nfrom flask_login import LoginManager, current_user, login_user, logout_user\nimport datetime\n\nfrom flask_login.utils import login_required\nfrom forum.app import app\nfrom flask_sqlalchemy import SQLAlchemy\n\nfrom flask_login import UserMixin\nimport re\nimport datetime\nfrom flask_login.login_manager import LoginManager\nfrom werkzeug.security import generate_password_hash, check_password_hash\n\n\ndb = SQLAlchemy(app)\n\n#VIEWS\n\n@app.route('/')\ndef index():\n\tsubforums = Subforum.query.filter(Subforum.parent_id == None).order_by(Subforum.id)\n\treturn render_template(\"subforums.html\", subforums=subforums)\n\n@app.route('/subforum')\ndef subforum():\n\tsubforum_id = int(request.args.get(\"sub\"))\n\tsubforum = Subforum.query.filter(Subforum.id == subforum_id).first()\n\tif not subforum:\n\t\treturn error(\"That subforum does not exist!\")\n\tposts = Post.query.filter(Post.subforum_id == subforum_id).order_by(Post.id.desc()).limit(50)\n\tif not subforum.path:\n\t\tsubforum.path = generateLinkPath(subforum.id)\n\n\tsubforums = Subforum.query.filter(Subforum.parent_id == subforum_id).all()\n\treturn render_template(\"subforum.html\", subforum=subforum, posts=posts, subforums=subforums, path=subforum.path)\n\n@app.route('/loginform')\ndef loginform():\n\treturn render_template(\"login.html\")\n\n\n@login_required\n@app.route('/addpost')\ndef addpost():\n\tsubforum_id = int(request.args.get(\"sub\"))\n\tsubforum = Subforum.query.filter(Subforum.id == subforum_id).first()\n\tif not subforum:\n\t\treturn error(\"That subforum does not exist!\")\n\n\treturn render_template(\"createpost.html\", subforum=subforum)\n\n@app.route('/viewpost')\ndef viewpost():\n\tpostid = int(request.args.get(\"post\"))\n\tpost = Post.query.filter(Post.id == postid).first()\n\tif not post:\n\t\treturn error(\"That post does not exist!\")\n\tif not post.subforum.path:\n\t\tsubforum.path = generateLinkPath(post.subforum.id)\n\tcomments = Comment.query.filter(Comment.post_id == postid).order_by(Comment.id.desc()) # no need for scalability now\n\treturn render_template(\"viewpost.html\", post=post, path=subforum.path, comments=comments)\n\n#ACTIONS\n\n@login_required\n@app.route('/action_comment', methods=['POST', 'GET'])\ndef comment():\n\tpost_id = int(request.args.get(\"post\"))\n\tpost = Post.query.filter(Post.id == post_id).first()\n\tif not post:\n\t\treturn error(\"That post does not exist!\")\n\tcontent = request.form['content']\n\tpostdate = datetime.datetime.now()\n\tcomment = Comment(content, postdate)\n\tcurrent_user.comments.append(comment)\n\tpost.comments.append(comment)\n\tdb.session.commit()\n\treturn redirect(\"/viewpost?post=\" + str(post_id))\n\n@login_required\n@app.route('/action_post', methods=['POST'])\ndef action_post():\n\tsubforum_id = int(request.args.get(\"sub\"))\n\tsubforum = Subforum.query.filter(Subforum.id == subforum_id).first()\n\tif not subforum:\n\t\treturn redirect(url_for(\"subforums\"))\n\n\tuser = current_user\n\ttitle = request.form['title']\n\tcontent = request.form['content']\n\t#check for valid posting\n\terrors = []\n\tretry = False\n\tif not valid_title(title):\n\t\terrors.append(\"Title must be between 4 and 140 characters long!\")\n\t\tretry = True\n\tif not valid_content(content):\n\t\terrors.append(\"Post must be between 10 and 5000 characters long!\")\n\t\tretry = True\n\tif retry:\n\t\treturn render_template(\"createpost.html\",subforum=subforum,  errors=errors)\n\tpost = Post(title, content, datetime.datetime.now())\n\tsubforum.posts.append(post)\n\tuser.posts.append(post)\n\tdb.session.commit()\n\treturn redirect(\"/viewpost?post=\" + str(post.id))\n\n\n@app.route('/action_login', methods=['POST'])\ndef action_login():\n\tusername = request.form['username']\n\tpassword = request.form['password']\n\tuser = User.query.filter(User.username == username).first()\n\tif user and user.check_password(password):\n\t\tlogin_user(user)\n\telse:\n\t\terrors = []\n\t\terrors.append(\"Username or password is incorrect!\")\n\t\treturn render_template(\"login.html\", errors=errors)\n\treturn redirect(\"/\")\n\n\n@login_required\n@app.route('/action_logout')\ndef action_logout():\n\t#todo\n\tlogout_user()\n\treturn redirect(\"/\")\n\n@app.route('/action_createaccount', methods=['POST'])\ndef action_createaccount():\n\tusername = request.form['username']\n\tpassword = request.form['password']\n\temail = request.form['email']\n\terrors = []\n\tretry = False\n\tif username_taken(username):\n\t\terrors.append(\"Username is already taken!\")\n\t\tretry=True\n\tif email_taken(email):\n\t\terrors.append(\"An account already exists with this email!\")\n\t\tretry = True\n\tif not valid_username(username):\n\t\terrors.append(\"Username is not valid!\")\n\t\tretry = True\n\t# if not valid_password(password):\n\t# \terrors.append(\"Password is not valid!\")\n\t# \tretry = True\n\tif retry:\n\t\treturn render_template(\"login.html\", errors=errors)\n\tuser = User(email, username, password)\n\tif user.username == \"admin\":\n\t\tuser.admin = True\n\tdb.session.add(user)\n\tdb.session.commit()\n\tlogin_user(user)\n\treturn redirect(\"/\")\n\ndef error(errormessage):\n\treturn \"<b style=\\\"color: red;\\\">\" + errormessage + \"</b>\"\n\ndef generateLinkPath(subforumid):\n\tlinks = []\n\tsubforum = Subforum.query.filter(Subforum.id == subforumid).first()\n\tparent = Subforum.query.filter(Subforum.id == subforum.parent_id).first()\n\tlinks.append(\"<a href=\\\"/subforum?sub=\" + str(subforum.id) + \"\\\">\" + subforum.title + \"</a>\")\n\twhile parent is not None:\n\t\tlinks.append(\"<a href=\\\"/subforum?sub=\" + str(parent.id) + \"\\\">\" + parent.title + \"</a>\")\n\t\tparent = Subforum.query.filter(Subforum.id == parent.parent_id).first()\n\tlinks.append(\"<a href=\\\"/\\\">Forum Index</a>\")\n\tlink = \"\"\n\tfor l in reversed(links):\n\t\tlink = link + \" / \" + l\n\treturn link\n\n\n#from forum.app import db, app \n\n\nlogin_manager = LoginManager()\nlogin_manager.init_app(app)\n\n# if __name__ == \"__main__\":\n# \t#runsetup()\n# \tport = int(os.environ[\"PORT\"])\n# \tapp.run(host='0.0.0.0', port=port, debug=True)\n\n\n\n#DATABASE STUFF\n@login_manager.user_loader\ndef load_user(userid):\n\treturn User.query.get(userid)\n\n\npassword_regex = re.compile(\"^[a-zA-Z0-9!@#%&]{6,40}$\")\nusername_regex = re.compile(\"^[a-zA-Z0-9!@#%&]{4,40}$\")\n#Account checks\ndef username_taken(username):\n\treturn User.query.filter(User.username == username).first()\ndef email_taken(email):\n\treturn User.query.filter(User.email == email).first()\ndef valid_username(username):\n\tif not username_regex.match(username):\n\t\t#username does not meet password reqirements\n\t\treturn False\n\t#username is not taken and does meet the password requirements\n\treturn True\ndef valid_password(password):\n\treturn password_regex.match(password)\n#Post checks\ndef valid_title(title):\n\treturn len(title) > 4 and len(title) < 140\ndef valid_content(content):\n\treturn len(content) > 10 and len(content) < 5000\n\n\n#OBJECT MODELS\nclass User(UserMixin, db.Model):\n\tid = db.Column(db.Integer, primary_key=True)\n\tusername = db.Column(db.Text, unique=True)\n\tpassword_hash = db.Column(db.Text)\n\temail = db.Column(db.Text, unique=True)\n\tadmin = db.Column(db.Boolean, default=False, unique=True)\n\tposts = db.relationship(\"Post\", backref=\"user\")\n\tcomments = db.relationship(\"Comment\", backref=\"user\")\n\n\tdef __init__(self, email, username, password):\n\t\tself.email = email\n\t\tself.username = username\n\t\tself.password_hash = generate_password_hash(password)\n\tdef check_password(self, password):\n\t\treturn check_password_hash(self.password_hash, password)\nclass Post(db.Model):\n\tid = db.Column(db.Integer, primary_key=True)\n\ttitle = db.Column(db.Text)\n\tcontent = db.Column(db.Text)\n\tcomments = db.relationship(\"Comment\", backref=\"post\")\n\tuser_id = db.Column(db.Integer, db.ForeignKey('user.id'))\n\tsubforum_id = db.Column(db.Integer, db.ForeignKey('subforum.id'))\n\tpostdate = db.Column(db.DateTime)\n\n\t#cache stuff\n\tlastcheck = None\n\tsavedresponce = None\n\tdef __init__(self, title, content, postdate):\n\t\tself.title = title\n\t\tself.content = content\n\t\tself.postdate = postdate\n\tdef get_time_string(self):\n\t\t#this only needs to be calculated every so often, not for every request\n\t\t#this can be a rudamentary chache\n\t\tnow = datetime.datetime.now()\n\t\tif self.lastcheck is None or (now - self.lastcheck).total_seconds() > 30:\n\t\t\tself.lastcheck = now\n\t\telse:\n\t\t\treturn self.savedresponce\n\n\t\tdiff = now - self.postdate\n\n\t\tseconds = diff.total_seconds()\n\t\tprint(seconds)\n\t\tif seconds / (60 * 60 * 24 * 30) > 1:\n\t\t\tself.savedresponce =  \" \" + str(int(seconds / (60 * 60 * 24 * 30))) + \" months ago\"\n\t\telif seconds / (60 * 60 * 24) > 1:\n\t\t\tself.savedresponce =  \" \" + str(int(seconds / (60*  60 * 24))) + \" days ago\"\n\t\telif seconds / (60 * 60) > 1:\n\t\t\tself.savedresponce = \" \" + str(int(seconds / (60 * 60))) + \" hours ago\"\n\t\telif seconds / (60) > 1:\n\t\t\tself.savedresponce = \" \" + str(int(seconds / 60)) + \" minutes ago\"\n\t\telse:\n\t\t\tself.savedresponce =  \"Just a moment ago!\"\n\n\t\treturn self.savedresponce\n\nclass Subforum(db.Model):\n\tid = db.Column(db.Integer, primary_key=True)\n\ttitle = db.Column(db.Text, unique=True)\n\tdescription = db.Column(db.Text)\n\tsubforums = db.relationship(\"Subforum\")\n\tparent_id = db.Column(db.Integer, db.ForeignKey('subforum.id'))\n\tposts = db.relationship(\"Post\", backref=\"subforum\")\n\tpath = None\n\thidden = db.Column(db.Boolean, default=False)\n\tdef __init__(self, title, description):\n\t\tself.title = title\n\t\tself.description = description\n\nclass Comment(db.Model):\n\tid = db.Column(db.Integer, primary_key=True)\n\tcontent = db.Column(db.Text)\n\tpostdate = db.Column(db.DateTime)\n\tuser_id = db.Column(db.Integer, db.ForeignKey('user.id'))\n\tpost_id = db.Column(db.Integer, db.ForeignKey(\"post.id\"))\n\n\tlastcheck = None\n\tsavedresponce = None\n\tdef __init__(self, content, postdate):\n\t\tself.content = content\n\t\tself.postdate = postdate\n\tdef get_time_string(self):\n\t\t#this only needs to be calculated every so often, not for every request\n\t\t#this can be a rudamentary chache\n\t\tnow = datetime.datetime.now()\n\t\tif self.lastcheck is None or (now - self.lastcheck).total_seconds() > 30:\n\t\t\tself.lastcheck = now\n\t\telse:\n\t\t\treturn self.savedresponce\n\n\t\tdiff = now - self.postdate\n\t\tseconds = diff.total_seconds()\n\t\tif seconds / (60 * 60 * 24 * 30) > 1:\n\t\t\tself.savedresponce =  \" \" + str(int(seconds / (60 * 60 * 24 * 30))) + \" months ago\"\n\t\telif seconds / (60 * 60 * 24) > 1:\n\t\t\tself.savedresponce =  \" \" + str(int(seconds / (60*  60 * 24))) + \" days ago\"\n\t\telif seconds / (60 * 60) > 1:\n\t\t\tself.savedresponce = \" \" + str(int(seconds / (60 * 60))) + \" hours ago\"\n\t\telif seconds / (60) > 1:\n\t\t\tself.savedresponce = \" \" + str(int(seconds / 60)) + \" minutes ago\"\n\t\telse:\n\t\t\tself.savedresponce =  \"Just a moment ago!\"\n\t\treturn self.savedresponce\n\n\ndef init_site():\n\tadmin = add_subforum(\"Forum\", \"Announcements, bug reports, and general discussion about the forum belongs here\")\n\tadd_subforum(\"Announcements\", \"View forum announcements here\",admin)\n\tadd_subforum(\"Bug Reports\", \"Report bugs with the forum here\", admin)\n\tadd_subforum(\"General Discussion\", \"Use this subforum to post anything you want\")\n\tadd_subforum(\"Other\", \"Discuss other things here\")\n\ndef add_subforum(title, description, parent=None):\n\tsub = Subforum(title, description)\n\tif parent:\n\t\tfor subforum in parent.subforums:\n\t\t\tif subforum.title == title:\n\t\t\t\treturn\n\t\tparent.subforums.append(sub)\n\telse:\n\t\tsubforums = Subforum.query.filter(Subforum.parent_id == None).all()\n\t\tfor subforum in subforums:\n\t\t\tif subforum.title == title:\n\t\t\t\treturn\n\t\tdb.session.add(sub)\n\tprint(\"adding \" + title)\n\tdb.session.commit()\n\treturn sub\n\"\"\"\ndef interpret_site_value(subforumstr):\n\tsegments = subforumstr.split(':')\n\tidentifier = segments[0]\n\tdescription = segments[1]\n\tparents = []\n\thasparents = False\n\twhile('.' in identifier):\n\t\thasparents = True\n\t\tdotindex = identifier.index('.')\n\t\tparents.append(identifier[0:dotindex])\n\t\tidentifier = identifier[dotindex + 1:]\n\tif hasparents:\n\t\tdirectparent = subforum_from_parent_array(parents)\n\t\tif directparent is None:\n\t\t\tprint(identifier + \" could not find parents\")\n\t\telse:\n\t\t\tadd_subforum(identifier, description, directparent)\n\telse:\n\t\tadd_subforum(identifier, description)\n\ndef subforum_from_parent_array(parents):\n\tsubforums = Subforum.query.filter(Subforum.parent_id == None).all()\n\ttop_parent = parents[0]\n\tparents = parents[1::]\n\tfor subforum in subforums:\n\t\tif subforum.title == top_parent:\n\t\t\tcur = subforum\n\t\t\tfor parent in parents:\n\t\t\t\tfor child in subforum.subforums:\n\t\t\t\t\tif child.title == parent:\n\t\t\t\t\t\tcur = child\n\t\t\treturn cur\n\treturn None\n\n\ndef setup():\n\tsiteconfig = open('./config/subforums', 'r')\n\tfor value in siteconfig:\n\t\tinterpret_site_value(value)\n\"\"\"\n\n\ndb.create_all()\nif not Subforum.query.all():\n\t\tinit_site()\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/forum/forum.py b/forum/forum.py
--- a/forum/forum.py	(revision 2bfa11f5f487a5f92d669e582749722caceb4d9a)
+++ b/forum/forum.py	(date 1649775711793)
@@ -40,7 +40,6 @@
 def loginform():
 	return render_template("login.html")
 
-
 @login_required
 @app.route('/addpost')
 def addpost():
Index: forum/templates/createpost.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'layout.html' %}\n{% block body %}\n\n\n\n<div class=\"postsubmit\">\n\tEnter your post here:<br>\n\t<div class=\"postinginfo\">\n\tYou are posting to {{ subforum.title }}\n\t</div>\n\n\t<form action=\"action_post?sub={{ subforum.id }}\" method=\"POST\">\n\n\t\t<input class=\"inputbox\" size=\"100\" type=\"text\" placeholder=\"Title\" name=\"title\"><br>\n\n\t\t<textarea class=\"inputbox\" rows=\"25\" cols=\"100\"  name=\"content\" placeholder=\"Enter post here\"></textarea><br>\n\n\t\t<input class=\"inputbox\" type=\"submit\" value=\"Submit Post\">\n\t</form>\n</div>\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/forum/templates/createpost.html b/forum/templates/createpost.html
--- a/forum/templates/createpost.html	(revision 2bfa11f5f487a5f92d669e582749722caceb4d9a)
+++ b/forum/templates/createpost.html	(date 1649775711797)
@@ -18,4 +18,7 @@
 		<input class="inputbox" type="submit" value="Submit Post">
 	</form>
 </div>
-{% endblock %}
\ No newline at end of file
+{% endblock %}
+
+
+
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"104ecbb5-3205-49b1-a4f6-98d471abbbe3\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/.idea/CircusCircus-Forum-.iml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/dbnavigator.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"27ekkwM0tRqlBw3NzQsoWJ2FcAY\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.lookFeel\" />\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"104ecbb5-3205-49b1-a4f6-98d471abbbe3\" name=\"Changes\" comment=\"\" />\n      <created>1649688087169</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1649688087169</updated>\n    </task>\n    <servers />\n  </component>\n  <component name=\"UnknownFeatures\">\n    <option featureType=\"com.intellij.fileTypeFactory\" implementationName=\"requirements.txt\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2bfa11f5f487a5f92d669e582749722caceb4d9a)
+++ b/.idea/workspace.xml	(date 1649775711802)
@@ -2,17 +2,27 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="104ecbb5-3205-49b1-a4f6-98d471abbbe3" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/CircusCircus-Forum-.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/dbnavigator.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/forum/images/chat.jpeg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/forum/images/heart_emoji.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/forum/images/hug_emoji.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/forum/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/forum/app.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/forum/forum.py" beforeDir="false" afterPath="$PROJECT_DIR$/forum/forum.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/forum/templates/createpost.html" beforeDir="false" afterPath="$PROJECT_DIR$/forum/templates/createpost.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/forum/templates/header.html" beforeDir="false" afterPath="$PROJECT_DIR$/forum/templates/header.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/forum/templates/viewpost.html" beforeDir="false" afterPath="$PROJECT_DIR$/forum/templates/viewpost.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Python Script" />
+      </list>
+    </option>
   </component>
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
@@ -21,23 +31,106 @@
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GitSEFilterConfiguration">
+    <file-type-list>
+      <filtered-out-file-type name="LOCAL_BRANCH" />
+      <filtered-out-file-type name="REMOTE_BRANCH" />
+      <filtered-out-file-type name="TAG" />
+      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
+    </file-type-list>
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
   <component name="ProjectId" id="27ekkwM0tRqlBw3NzQsoWJ2FcAY" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">
+    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
     <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
-    <property name="settings.editor.selected.configurable" value="preferences.lookFeel" />
+    <property name="settings.editor.selected.configurable" value="reference.settings.ide.settings.web.browsers" />
+  </component>
+  <component name="RunManager" selected="Python.model">
+    <configuration name="app" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="CircusCircus-Forum-" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/forum" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/forum/app.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <configuration name="forum" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="CircusCircus-Forum-" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/forum" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/forum/forum.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <configuration name="model" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="CircusCircus-Forum-" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/forum" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/forum/model.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Python.model" />
+        <item itemvalue="Python.forum" />
+        <item itemvalue="Python.app" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -64,4 +157,7 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
+  </component>
 </project>
\ No newline at end of file
